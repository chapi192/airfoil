# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import numpy as np

#our files
import data

#size of the vector and pressure windows
windowX, windowY = 100, 100

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1109, 852)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.columnView = QtWidgets.QColumnView(self.centralwidget)
        self.columnView.setGeometry(QtCore.QRect(820, 10, 281, 211))
        self.columnView.setObjectName("columnView")
        self.window_size = QtWidgets.QComboBox(self.centralwidget)
        self.window_size.setGeometry(QtCore.QRect(860, 30, 211, 32))
        self.window_size.setCurrentText("")
        self.window_size.setObjectName("window_size")
        self.window_size.addItem("")
        self.window_size.setItemText(0, "")
        self.window_size.addItem("")
        self.window_size.addItem("")
        self.window_choice = QtWidgets.QComboBox(self.centralwidget)
        self.window_choice.setGeometry(QtCore.QRect(860, 80, 211, 32))
        self.window_choice.setObjectName("window_choice")
        self.window_choice.addItem("")
        self.window_choice.addItem("")
        self.window_choice.addItem("")
        self.window_choice.addItem("")
        self.window_choice.addItem("")
        self.window_choice.addItem("")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(950, 130, 111, 23))
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(900, 160, 121, 23))
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_3.setGeometry(QtCore.QRect(880, 130, 71, 23))
        self.checkBox_3.setObjectName("checkBox_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.titlebar = QtWidgets.QStatusBar(MainWindow)
        self.titlebar.setObjectName("titlebar")
        MainWindow.setStatusBar(self.titlebar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.window_size.setItemText(1, _translate("MainWindow", "Velocity"))
        self.window_size.setItemText(2, _translate("MainWindow", "Density"))
        self.window_choice.setItemText(0, _translate("MainWindow", "100x200"))
        self.window_choice.setItemText(1, _translate("MainWindow", "200x300"))
        self.window_choice.setItemText(2, _translate("MainWindow", "300x400"))
        self.window_choice.setItemText(3, _translate("MainWindow", "400x500"))
        self.window_choice.setItemText(4, _translate("MainWindow", "500x600"))
        self.window_choice.setItemText(5, _translate("MainWindow", "600x700"))
        self.checkBox.setText(_translate("MainWindow", "Tracer Lines"))
        self.checkBox_2.setText(_translate("MainWindow", "Flow Particles"))
        self.checkBox_3.setText(_translate("MainWindow", "Force"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    dm = data.run(MainWindow, windowX, windowY)

    # For having a consistently updating plot
    # The timer has to be defined here for weird python scoping/runtime issues
    dt: int = 200  # in ms
    timer = QtCore.QTimer()
    data.connect(timer, dm)
    timer.start(dt)

    sys.exit(app.exec_())
